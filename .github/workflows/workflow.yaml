name: TypeShell Linux

on: [ push ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go

        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Install dependencies
        run: |
          go get .
        
      - name: Test Bash
        shell: bash
        run: |
          go build tsh.go
          go test ./tests -v -cover -coverprofile=coverage.out -coverpkg ./lexer,./parser,./transpiler || exit -1
          go tool cover -func=coverage.out

      - name: Test Batch
        shell: cmd
        run: |
          go build tsh.go
          go test ./tests -v -cover -coverprofile=coverage.out -coverpkg ./lexer,./parser,./transpiler || exit -1
          go tool cover -func=coverage.out

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ['linux', 'windows']
        arch: ['386', 'amd64', 'arm64']
    steps:
      - uses: actions/checkout@v4

      - name: Build
        shell: bash
        run: |
          GOOS=${{ matrix.os }}
          GOARCH=${{ matrix.arch }}
          go build -o tsh tsh.go

          if [ "${{ matrix.os }}" == "windows" ]; then
            EXT=.exe
          else
            EXT=
          fi

          echo "${EXT}" >> $GITHUB_ENV
      - name: Archive builds
        uses: actions/upload-artifact@v4
        with:
          name: tsh_${{ matrix.os }}_${{ matrix.arch }}${EXT}
          path: tsh
